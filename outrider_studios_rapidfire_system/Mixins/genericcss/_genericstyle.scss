@use '_genericplaceholders.scss';
//Sets the font-size to be used by rem unit calls
html{
  font-size: 13px;
}
//Sets the bio/charsheet/a&a tab container to be sticky and float at the top
ul.nav-tabs.nav{
  position:sticky;
  top:0;
  background-color:white;
  z-index:9999;
  margin-bottom:0px;
}
.itemcontrol{
  z-index:10;
}
.image-input{
  cursor:pointer;
}
.ui-dialog .tab-content .charsheet{
  --selectedRadio:black;
  padding-top:0px;
  @extend %defaultStyles;
  .raw-control:not(:checked) + .raw,
  .raw-control:checked ~ .custom{
    display:none !important;
  }
  .raw{
    text-transform: capitalize;
  }
  span.underlined{
    display:block;
    text-align:center;
    padding:2px;
    box-sizing: border-box;
    overflow: hidden;
    text-overflow: ellipsis;
    border:{
      width:1px 3px;
      style:solid;
      color:transparent transparent black transparent;
    };
  }
  .display-control{
    &:is([value=""],:not([value])){
      ~ .controlled-display{
        display:none !important;
      }
    }
  }
  .fill-left{
		gap: var(--half-gap) var(--tiny-gap);
		place-items: center;
		&:is(:hover,
		 :focus-within,
		 :focus){
			.fill-left__clearer{
				background-image: linear-gradient(45deg, transparent 0% 48%, white 48% calc(48% + 1px), transparent calc(48% + 1px)), linear-gradient(-45deg, transparent 0% 48%, white 48% calc(48% + 1px), transparent calc(48% + 1px));
			}
		}
	}
  .fill-left__dot,
  .fill-left__checkbox{
    cursor: pointer;
    -webkit-apperance: none;
    appearance: none;
    width: 12px;
    border: 1px solid black;
    background-color: var(--selectedRadio);
    @extend %ratio1_1;
    &:checked{
      display:none;
      ~ .fill-left__radio{
        order: 3;
        background-color: white;
      }
    }
  }
  .fill-left__dot{
    @extend %circle;
  }
  .fill-left__clearer{
    order:2;
  }
  .fill-left__radio{
    order: 1;
  }
  .uppercase{
    @extend %uppercase;
  }
  .subsystem-display{
    &:not(.active-system){
      display:none !important;
    }
  }
  *[data-i18n='xp']{
    text-transform:uppercase;
  }
  .stat-grid{
    gap:var(--half-gap) var(--tiny-gap);
    > :not(input):not(h2):not(.center){
      place-self:center end;
    }
  }
  .boxed.span-2{
    @extend %grid;
    grid-auto-flow: column;
    place-content:center;
    width:6.5rem;
  }
  .roll-plus{
    justify-self: center;
  }
  .health-track{
    .repcontainer{
      @extend %grid;
      grid-template-columns:repeat(auto-fill,2rem);
      gap:var(--tiny-gap) 0;
      &:hover{
        .health-track__clearer{
          background-image:linear-gradient(45deg, transparent 0% 48%, white 48% calc(48% + 1px), transparent calc(48% + 1px)), linear-gradient(-45deg, transparent 0% 48%, white 48% calc(48% + 1px), transparent calc(48% + 1px));
        }
      }
      > .repitem{
        @extend %grid;
        grid-template:{
          columns:2rem;
          rows:repeat(2,2rem);
          areas:
            'check'
            'penalty'
          ;
        }
        &:first-child{
          .itemcontrol{
            display:none !important;
          }
        }
        .repcontrol_move{
          display:none !important;
        }
      }
    }
    .repcontrol{
      display:none;
    }
  }
  .health-track__max-control[value="1"] ~ .repcontrol .repcontrol_edit{
    display:none;
  }
  .health-track__number{
    &:is(:hover,:focus){
      border-radius:0;
    }
  }
  .health-track__checkbox{
    border-radius:0;
    width:100%;
    height:100%;
    box-sizing:border-box;
    grid-area:check;
  }
  .health-track__clear-control:not(:checked) ~ .health-track__clearer{
    display:none;
  }
  .health-track__fill-control{
    &:checked + *{
      @extend %checked;
    }
  }
  .health-track__clearer{
    grid-area:check;
    button{
      width:100%;
      height:100%;
    }
  }
  .adaptive--text{
    @extend %adaptiveText;
  }
  .repeat-columns{
    @extend %grid;
    > *{
      background-color:var(--subHeadBackColor);
      border:1px solid black;
    }
  }
  .image-container{
    @extend %grid;
    grid-template-columns:"content";
  }
  .image-container__input{
    z-index:10;
    background-color:white;
    box-shadow:0 0 var(--grid-gap) var(--grid-gap) white;
    grid-area:content;
    place-self:center;
    width:calc(100% - (var(--big-gap) * 2));
    transition:opacity var(--focusTiming),height var(--focusTiming);
    opacity:0;
    height:0;
    overflow:hidden;
    span{
      white-space: pre-wrap;
    }
    input{
      width:100%;
      box-sizing:border-box;
    }
    &.active{
      opacity:1;
      height:auto;
    }
  }
  .image-container__button{
    grid-area:content;
  }
  .base-container{
    @extend %grid;
    grid-template-areas:'content';
  }
  .base-container__actual{
    grid-area:content;
  }
  .base-container__interact{
    grid-area:content;
    z-index:1;
  }
}
#main{
  .inactive{
    display:none;
  }
}